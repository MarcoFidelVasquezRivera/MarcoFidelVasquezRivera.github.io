[{"content":" ¡Welcome to my Portfolio! # Hello, I am Marco Vásquez, a Software Systems Engineer with great passion for backend development and Artificial Intelligence. Here, I showcase some of my personal projects, my skills and a bit of information about me.\nAbout me # I am a graduated Software Systems Engineer from ICESI University. Experienced in the development of artificial intelligence models and Java backend development with cloud infrastructure, I have successfully implemented machine learning algorithms for various applications. Additionally, my expertise in Java backend development has allowed me to design robust and scalable systems that meet the demands of modern software solutions.\n","date":"1 January 0001","permalink":"/","section":"","summary":"¡Welcome to my Portfolio!","title":""},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"In this project I developed an AI model for image segmentation focused on water bodies. By implementing the U-Net architecture and applying data augmentation, the model accurately delineates water areas within images, generating precise masks that highlight the water\u0026rsquo;s presence.\nTechnologies Used: # keras: user-friendly deep learning library for building and training neural networks in Python. TensorFlow: The machine learning framework that powers the image classification model. Python: The programming language used for developing the classifier and the FastAPI application. NumPy: A library for numerical operations, essential for data manipulation in the model. Project Components: # Dataset: The model is trained on a dataset obtained from kaggle, it contains images of 2841 water bodies with multiple shapes. all of these data went through a data augmentation process to add the images shifted vertically and horizontaly to the dataset.\nTensorFlow Model: The model was created using the U-Net architecture, wich consists of an encoder and a decoder and some skip connections between them. The image below ilustrates the architecture.\n","date":"1 January 0001","permalink":"/projects/imagesegmentation/","section":"Some of the projects I have worked on","summary":"In this project I developed an AI model for image segmentation focused on water bodies.","title":"Image segmentation on water bodies"},{"content":"Mango-Leaf is an innovative platform which uses Artificial Intelligence to detect if a mango leave is either healthy or showing signs of disease. It consist of two main parts: the first one is a deep learning model wich achieved a remarkable 98% accuracy in disease classification. The second part consists of a connection to a LLM (GPT 3.5) to interpret the diagnosis and signal possible causes for the diseas as well as recomendations to treat the plant.\nTechnologies Used: # TensorFlow: The machine learning framework that powers the image classification model. Python: The programming language used for developing the classifier and the FastAPI application. NumPy: A library for numerical operations, essential for data manipulation in the model. FastAPI: A modern, fast (high-performance), web framework for building APIs. OpenAI: An API which allows for comunication with OpenAI LLMs like GPT 3.5. Streamlit: A Python library which allows for UI creation focusing on AI projects. Docker: Containerization technology for packaging the application and its dependencies. Project Components: # Dataset: The model is trained on a dataset obtained from kaggle, it contains images of mango leaves both healthy and diseased. To manage all these images we used the numpy libraries functions to clean the dataset. In order to prepare it for the training we used the split functions from the scikit-learn library.\nTensorFlow Model: We leverage the power of TensorFlow to create a deep learning model using the ResNet50V2 Base Model. Then we construct a custom model using a Sequential model from the keras module with the following layers:\nThe pre-trained ResNet50V2 model. BatchNormalization layer. Dense layer with leaky ReLU activation, He normal initialization, and 512 neurons. Another BatchNormalization layer. Dropout layer with a dropout rate of 30%. Dense layer with leaky ReLU activation, He normal initialization, and 128 neurons. Another BatchNormalization layer. Another Dropout layer. Dense layer with softmax activation, Glorot uniform initialization, and 8 neurons (assuming it’s a classification task with 8 classes). BackEnd: We use FastAPI to create a simple post endpoint to interact with the model. The request contains the image of a mango leaf, and the response returns the models prediction. This prediction is then passed to a prompt, which is then sent to GPT 3.5 with the help of the OpenAI python module. GPT 3.5 then returns possible causes for the disease as well as recomendations to treat it.\nFrontEnd: Finally we create a simple UI using streamlit. Streamlit allows us to easily implement image upload functinalities as well as a chat interface to interact with GPT 3.5\n","date":"1 January 0001","permalink":"/projects/mangoleaf/","section":"Some of the projects I have worked on","summary":"Mango-Leaf is an innovative platform which uses Artificial Intelligence to detect if a mango leave is either healthy or showing signs of disease.","title":"Mango Leaf Classifier"},{"content":"The while title is: \u0026ldquo;MusIkA: Tool for predicting the potential popularity of Pop/Rock genre songs on digital platforms using Artificial Intelligence\u0026rdquo; and it is the project I worked on as my thesis. As the tittle suggests it the main focus was to develop a model based on artificial intelligence to predict the popularity of songs. To achieve this, we constructed a dataset comprising 39,397 song lyrics, alongside 30,671 audio files in MP3 format, including their high and low-level audio features. Subsequently, we explored various artificial intelligence models for popularity prediction. The results revealed a prediction accuracy of 58% using these models.\nTechnologies Used: # keras: user-friendly deep learning library for building and training neural networks in Python. TensorFlow: The machine learning framework that powers the image classification model. Python: The programming language used for developing the classifier and the FastAPI application. NumPy: A library for numerical operations, essential for data manipulation in the model. Pandas: a fast, powerful, flexible and easy to use open source data analysis and manipulation tool. Selenium: Python library and tool used for automating web browsers to do a number of tasks. In this case, web-scrapping. pydeezer: Python library used to ibtain songs information from deezer. In this project we used it to obtain the list of the songs and download most the songs. pytube: Python library to download songs from youtube. Spotipy: Python library used to ibtain songs information from spotipy. In this project we used it to obtain the list of the songs and the high-level features. Librosa: Python library used to analyse the mp3 files and obtain the low-level features. Project Components: # Datased: we constructed a dataset comprising 39,397 song lyrics, alongside 30,671 audio files in MP3 format, including their high and low-level audio features. For this purpose we used multiple python libraries such as Pandas, Selenium, pydeezer, pytube, Spotipy and Librosa.\nModel architecture: in the image below you can see the architecture proposed in the project. ","date":"1 January 0001","permalink":"/projects/musika/","section":"Some of the projects I have worked on","summary":"The while title is: \u0026ldquo;MusIkA: Tool for predicting the potential popularity of Pop/Rock genre songs on digital platforms using Artificial Intelligence\u0026rdquo; and it is the project I worked on as my thesis.","title":"MusIkA"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"During my career I have worked on multiple projects, here you can check some of them.\n","date":"1 January 0001","permalink":"/projects/","section":"Some of the projects I have worked on","summary":"During my career I have worked on multiple projects, here you can check some of them.","title":"Some of the projects I have worked on"},{"content":"","date":"1 January 0001","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]